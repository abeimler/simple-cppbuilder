version: '3'

tasks:
  base:
    - docker build --force-rm=true -f ./Dockerfile.base -t abeimler/simple-cppbuilder:base .
    - docker build --force-rm=true -t abeimler/simple-cppbuilder .
    #docker build --force-rm=true -t abeimler/simple-cppbuilder:1.7.0 .

  base:libs:
    - task: base
    - docker build --force-rm=true -f ./Dockerfile.without-vcpkg -t abeimler/simple-cppbuilder:without-vcpkg .
    - docker build --force-rm=true -f ./Dockerfile.clang -t abeimler/simple-cppbuilder:clang .
    - docker build --force-rm=true --build-arg extra_libraries="mesa glu glfw-x11 libx11 libxrender libxext libxcursor libxrandr libxinerama xorg-server-devel" -t abeimler/simple-cppbuilder:opengl-libs .
    - docker build --force-rm=true --build-arg extra_libraries="boost" -t abeimler/simple-cppbuilder:boost .
    - docker build --force-rm=true --build-arg extra_libraries="abseil-cpp" -t abeimler/simple-cppbuilder:abseil-cpp .
    - docker build --force-rm=true -f ./Dockerfile.clang --build-arg extra_libraries="libc++" -t abeimler/simple-cppbuilder:libcpp .

  ci:
    - docker build --force-rm=true -f ./Dockerfile.ci -t abeimler/simple-cppbuilder:ci .
    - docker build --force-rm=true -f ./Dockerfile.ci-windows -t abeimler/simple-cppbuilder:ci-x64-mingw-w64 .
    - docker build --force-rm=true -f ./Dockerfile.ci-setup-cpp -t abeimler/simple-cppbuilder:ci-setup-cpp .

  emscripten:
    - task: base
    - docker build --force-rm=true -f ./Dockerfile.emscripten -t abeimler/simple-cppbuilder:emscripten .

  mingw:
    - task: base
    - |
      docker build --force-rm=true -f ./Dockerfile.cross \
        --build-arg vcpkg_target_triplet="x64-mingw-dynamic" \
        --build-arg cross_triple="x86_64-w64-mingw32" \
        --build-arg install_toolchain="mingw-w64-toolchain" \
        --build-arg install_extras_toolchain="mingw-w64-pkg-config mingw-w64-cmake mingw-w64-configure mingw-w64-make mingw-w64-environment powershell-bin" \
        --build-arg cmake_generator="Ninja" \
        --build-arg make="make" \
        --build-arg cmake="cmake" \
        --build-arg cross_make="x86_64-w64-mingw32-make" \
        --build-arg cross_cmake="x86_64-w64-mingw32-cmake" \
        --build-arg setup_env_script="mingw-env" \
        --build-arg setup_env_script_args="x86_64-w64-mingw32" \
        --build-arg cmake_toolchain_file="/usr/share/mingw/toolchain-x86_64-w64-mingw32.cmake" \
        --build-arg docker_build_script="docker-build.mingw.sh" \
        --build-arg docker_test_script="docker-test.mingw.sh" \
        --build-arg docker_entrypoint="docker-entrypoint.mingw.sh" \
        -t abeimler/simple-cppbuilder:x64-mingw-w64 .
    - |
      docker build --force-rm=true -f ./Dockerfile.cross \
        --build-arg vcpkg_target_triplet="x86-mingw-dynamic" \
        --build-arg cross_triple="i686-w64-mingw32" \
        --build-arg install_toolchain="mingw-w64-toolchain" \
        --build-arg install_extras_toolchain="mingw-w64-pkg-config mingw-w64-cmake mingw-w64-configure mingw-w64-make mingw-w64-environment powershell-bin" \
        --build-arg cmake_generator="Ninja" \
        --build-arg make="make" \
        --build-arg cmake="cmake" \
        --build-arg cross_make="i686-w64-mingw32-make" \
        --build-arg cross_cmake="i686-w64-mingw32-cmake" \
        --build-arg setup_env_script="mingw-env" \
        --build-arg setup_env_script_args="i686-w64-mingw32" \
        --build-arg cmake_toolchain_file="/usr/share/mingw/toolchain-i686-w64-mingw32.cmake" \
        --build-arg docker_build_script="docker-build.mingw.sh" \
        --build-arg docker_test_script="docker-test.mingw.sh" \
        --build-arg docker_entrypoint="docker-entrypoint.mingw.sh" \
        -t abeimler/simple-cppbuilder:x86-mingw-w64 .

  arm:
    - task: base
    - |
      docker build --force-rm=true -f ./Dockerfile.cross \
        --build-arg vcpkg_target_triplet="arm64-linux" \
        --build-arg cross_triple="aarch64-linux-gnu" \
        --build-arg install_toolchain="aarch64-linux-gnu-gcc" \
        --build-arg cmake_generator="Ninja" \
        --build-arg make="ninja" \
        --build-arg cmake="cmake" \
        --build-arg cross_make="ninja" \
        --build-arg cross_cmake="cmake" \
        --build-arg cmake_toolchain_file="/home/cmake/aarch64.toolchain.cmake" \
        -t abeimler/simple-cppbuilder:aarch64-linux .
    - |
      docker build --force-rm=true -f ./Dockerfile.cross \
        --build-arg vcpkg_target_triplet="arm-linux" \
        --build-arg cross_triple="arm-none-eabi" \
        --build-arg install_toolchain="arm-none-eabi-gcc" \
        --build-arg cmake_generator="Ninja" \
        --build-arg make="ninja" \
        --build-arg cmake="cmake" \
        --build-arg cross_make="ninja" \
        --build-arg cross_cmake="cmake" \
        --build-arg cmake_toolchain_file="/home/cmake/gnueabihf.toolchain.cmake" \
        -t abeimler/simple-cppbuilder:arm-eabi .
    ## @FIXME: https://aur.archlinux.org/packages/arm-linux-gnueabihf-gcc-stage1/#pinned-806072
    #- |
    #  docker build --force-rm=true -f ./Dockerfile.cross \
    #    --build-arg vcpkg_target_triplet="arm-linux" \
    #    --build-arg cross_triple="arm-linux-gnueabihf" \
    #    --build-arg install_toolchain="arm-linux-gnueabihf-gcc-stage1 arm-linux-gnueabihf-gcc-stage2 arm-linux-gnueabihf-gcc" \
    #    --build-arg cmake_generator="Ninja" \
    #    --build-arg make="ninja" \
    #    --build-arg cmake="cmake" \
    #    --build-arg cmake_toolchain_file="/home/cmake/arm.toolchain.cmake" \
    #    -t abeimler/simple-cppbuilder:arm-linux-gnueabihf .
    
  arm:cross:
    - task: base
    - |
      docker build --force-rm=true -f ./Dockerfile.crosstool-ng \
        --build-arg vcpkg_target_triplet="arm-linux" \
        --build-arg cross_triple="arm-unknown-linux-gnueabi" \
        --build-arg cmake_toolchain_file="/home/cmake/arm-toolchain.cmake" \
        -t abeimler/simple-cppbuilder:arm-unknown-linux-gnueabi .  
    #- |
    #  docker build --force-rm=true -f ./Dockerfile.crosstool-ng \
    #    --build-arg vcpkg_target_triplet="avr" \
    #    --build-arg cross_triple="avr" \
    #    --build-arg cmake_toolchain_file="/home/cmake/avr-toolchain.cmake" \
    #    -t abeimler/simple-cppbuilder:avr .
    #- |
    #  docker build --force-rm=true -f ./Dockerfile.crosstool-ng \
    #    --build-arg vcpkg_target_triplet="ppc64le-linux" \
    #    --build-arg cross_triple="powerpc64le-unknown-linux-gnu" \
    #    --build-arg cmake_toolchain_file="/home/cmake/ppc64le-toolchain.cmake" \
    #    -t abeimler/simple-cppbuilder:powerpc64le-unknown-linux-gnu .

  arm:rpi:
    - task: base
    - | 
      docker build --force-rm=true -f ./Dockerfile.crosstool-ng-rpi \
        --build-arg vcpkg_target_triplet="arm-linux" \
        --build-arg cross_triple="armv8-rpi4-linux-gnueabihf" \
        --build-arg cmake_toolchain_file="/home/cmake/arm-rpi-toolchain.cmake" \
        -t abeimler/simple-cppbuilder:rpi4 .
    - |
      docker build --force-rm=true -f ./Dockerfile.crosstool-ng-rpi \
        --build-arg vcpkg_target_triplet="arm-linux" \
        --build-arg cross_triple="armv8-rpi3-linux-gnueabihf" \
        --build-arg cmake_toolchain_file="/home/cmake/arm-rpi-toolchain.cmake" \
        -t abeimler/simple-cppbuilder:rpi3 .
    - |
      docker build --force-rm=true -f ./Dockerfile.crosstool-ng-rpi \
        --build-arg vcpkg_target_triplet="arm-linux" \
        --build-arg cross_triple="armv7-rpi2-linux-gnueabihf" \
        --build-arg cmake_toolchain_file="/home/cmake/arm-rpi-toolchain.cmake" \
        -t abeimler/simple-cppbuilder:rpi2 .
    - |
      docker build --force-rm=true -f ./Dockerfile.crosstool-ng-rpi \
        --build-arg vcpkg_target_triplet="arm-linux" \
        --build-arg cross_triple="armv6-unknown-linux-gnueabihf" \
        --build-arg cmake_toolchain_file="/home/cmake/arm-rpi-toolchain.cmake" \
        -t abeimler/simple-cppbuilder:rpi1 .
    - |
      docker build --force-rm=true -f ./Dockerfile.crosstool-ng-rpi \
        --build-arg vcpkg_target_triplet="arm64-linux" \
        --build-arg cross_triple="aarch64-rpi4-linux-gnu" \
        --build-arg cmake_toolchain_file="/home/cmake/aarch64-rpi-toolchain.cmake" \
        -t abeimler/simple-cppbuilder:rpi4-aarch64 .
    - |
      docker build --force-rm=true -f ./Dockerfile.crosstool-ng-rpi \
        --build-arg vcpkg_target_triplet="arm64-linux" \
        --build-arg cross_triple="aarch64-rpi3-linux-gnu" \
        --build-arg cmake_toolchain_file="/home/cmake/aarch64-rpi-toolchain.cmake" \
        -t abeimler/simple-cppbuilder:rpi3-aarch64 .

  android-template:
    internal: true
    cmds:
      - task: base
      - |
        docker build --force-rm=true -f ./Dockerfile.android-v \
          --build-arg vcpkg_target_triplet="arm-android" \
          --build-arg cmake="android-armv7a-eabi-cmake" \
          --build-arg android_abi="armeabi-v7a" \
          --build-arg android_target="{{.ANDROID_TARGET}}" \
          --build-arg android_ndk_version="{{.ANDROID_NDK_VERSION}}" \
          -t abeimler/simple-cppbuilder:arm-android-{{.ANDROID_TARGET}} .
      - |
        docker build --force-rm=true -f ./Dockerfile.android-v \
          --build-arg vcpkg_target_triplet="arm64-android" \
          --build-arg cmake="android-aarch64-cmake" \
          --build-arg android_abi="arm64-v8a" \
          --build-arg android_target="{{.ANDROID_TARGET}}" \
          --build-arg android_ndk_version="{{.ANDROID_NDK_VERSION}}" \
          -t abeimler/simple-cppbuilder:arm64-android{{.ANDROID_TARGET}} .
      - |
        docker build --force-rm=true -f ./Dockerfile.android-v \
          --build-arg vcpkg_target_triplet="x86-android" \
          --build-arg cmake="android-x86-cmake" \
          --build-arg android_abi="x86" \
          --build-arg android_target="{{.ANDROID_TARGET}}" \
          --build-arg android_ndk_version="{{.ANDROID_NDK_VERSION}}" \
          -t abeimler/simple-cppbuilder:x86-android-{{.ANDROID_TARGET}} .
      - |
        docker build --force-rm=true -f ./Dockerfile.android-v \
          --build-arg vcpkg_target_triplet="x64-android" \
          --build-arg cmake="android-x86-64-cmake" \
          --build-arg android_abi="x86_64" \
          --build-arg android_target="{{.ANDROID_TARGET}}" \
          --build-arg android_ndk_version="{{.ANDROID_NDK_VERSION}}" \
          -t abeimler/simple-cppbuilder:x64-android-{{.ANDROID_TARGET}} .

  android:21:
    cmds:
      - task: android-template
        vars:
          ANDROID_TARGET: 21
          ANDROID_NDK_VERSION: "-21"

  android:24:
    cmds:
      - task: android-template
        vars:
          ANDROID_TARGET: 24
          ANDROID_NDK_VERSION: "-beta"

  android:25:
    cmds:
      - task: android-template
        vars:
          ANDROID_TARGET: 25
          ANDROID_NDK_VERSION: ""

  android:
    - task: base
    - |
      docker build --force-rm=true -f ./Dockerfile.android \
        --build-arg vcpkg_target_triplet="arm-android" \
        --build-arg cmake="android-armv7a-eabi-cmake" \
        --build-arg android_abi="armeabi-v7a" \
        -t abeimler/simple-cppbuilder:arm-android .
    - |
      docker build --force-rm=true -f ./Dockerfile.android \
        --build-arg vcpkg_target_triplet="arm64-android" \
        --build-arg cmake="android-aarch64-cmake" \
        --build-arg android_abi="arm64-v8a" \
        -t abeimler/simple-cppbuilder:arm64-android .
    - |
      docker build --force-rm=true -f ./Dockerfile.android \
        --build-arg vcpkg_target_triplet="x86-android" \
        --build-arg cmake="android-x86-cmake" \
        --build-arg android_abi="x86" \
        -t abeimler/simple-cppbuilder:x86-android .
    - |
      docker build --force-rm=true -f ./Dockerfile.android \
        --build-arg vcpkg_target_triplet="x64-android" \
        --build-arg cmake="android-x86-64-cmake" \
        --build-arg android_abi="x86_64" \
        -t abeimler/simple-cppbuilder:x64-android .

  mingw:mxe:
    - task: base
    - |
      docker build --force-rm=true -f ./Dockerfile.mxe \
        --build-arg vcpkg_target_triplet="x64-mingw-dynamic" \
        --build-arg cross_triplet="x86_64-w64-mingw32.shared" \
        --build-arg processor="x86_64" \
        -t abeimler/simple-cppbuilder:x64-mingw-w64-mxe .
    - |
      docker build --force-rm=true -f ./Dockerfile.mxe \
        --build-arg vcpkg_target_triplet="x86-mingw-dynamic" \
        --build-arg cross_triplet="i686-w64-mingw32.shared" \
        --build-arg processor="i686" \
        -t abeimler/simple-cppbuilder:x86-mingw-w64-mxe .
    - | 
      docker build --force-rm=true -f ./Dockerfile.mxe \
        --build-arg vcpkg_target_triplet="x64-mingw-static" \
        --build-arg cross_triplet="x86_64-w64-mingw32.static" \
        --build-arg processor="x86_64" \
        -t abeimler/simple-cppbuilder:x64-mingw-w64-mxe-static .
    - |
      docker build --force-rm=true -f ./Dockerfile.mxe \
        --build-arg vcpkg_target_triplet="x86-mingw-static" \
        --build-arg cross_triplet="i686-w64-mingw32.static" \
        --build-arg processor="i686" \
        -t abeimler/simple-cppbuilder:x86-mingw-w64-mxe-static .

  gcc:
    - task: base
    #- docker build --force-rm=true -f ./Dockerfile.gcc --build-arg gcc_version=11 -t abeimler/simple-cppbuilder:gcc-11 .
    - docker build --force-rm=true -f ./Dockerfile.gcc --build-arg gcc_version=10 -t abeimler/simple-cppbuilder:gcc-10 .
    - docker build --force-rm=true -f ./Dockerfile.gcc --build-arg gcc_version=9 -t abeimler/simple-cppbuilder:gcc-9 .
    #- docker build --force-rm=true -f ./Dockerfile.gcc --build-arg gcc_version=8 -t abeimler/simple-cppbuilder:gcc-8 .
    #- docker build --force-rm=true -f ./Dockerfile.gcc --build-arg gcc_version=7 -t abeimler/simple-cppbuilder:gcc-7 .
    #- docker build --force-rm=true -f ./Dockerfile.gcc --build-arg gcc_version=6 -t abeimler/simple-cppbuilder:gcc-6 .
    #- docker build --force-rm=true -f ./Dockerfile.gcc --build-arg gcc_version=5 -t abeimler/simple-cppbuilder:gcc-5 .
    #- docker build --force-rm=true -f ./Dockerfile.gcc --build-arg gcc_version=49 -t abeimler/simple-cppbuilder:gcc-4.9 .

  default:
  - task: base
  - task: base:libs
  - task: ci
  - task: emscripten
  - task: mingw
  - task: arm
  - task: android
  #- task: android:21
  #- task: android:24
  #- task: arm:cross
  #- task: arm:rpi
  #- task: gcc
  #- task: mingw:mxe
