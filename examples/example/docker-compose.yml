version: '3.4'

services:
  # gcc Debug with make
  example-gcc-debug-build-make:
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    environment:
      CC: gcc
      CXX: g++
      TARGET: all
      BUILD_TYPE: Debug
      CMAKE_GENERATOR: Unix Makefiles
      CMAKE_ARGS: -DENABLE_DEVELOPER_MODE:BOOL=OFF -DENABLE_TESTING:BOOL=OFF
  # gcc Debug with ninja
  example-gcc-debug-build:
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    environment:
      CC: gcc
      CXX: g++
      TARGET: all
      BUILD_TYPE: Debug
      CMAKE_GENERATOR: Ninja
      CMAKE_ARGS: -DENABLE_DEVELOPER_MODE:BOOL=OFF -DENABLE_TESTING:BOOL=OFF
  example-gcc-debug-test:
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    environment:
      CC: gcc
      CXX: g++
      TARGET: all
      BUILD_TYPE: Debug
      CMAKE_GENERATOR: Ninja
      CMAKE_ARGS: -DENABLE_DEVELOPER_MODE:BOOL=ON -DENABLE_TESTING:BOOL=ON
  # gcc Release
  example-gcc-release-build:
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    environment:
      CC: gcc
      CXX: g++
      TARGET: all
      BUILD_TYPE: Release
      CMAKE_GENERATOR: Ninja
      CMAKE_ARGS: -DENABLE_DEVELOPER_MODE:BOOL=OFF -DENABLE_TESTING:BOOL=OFF 
  example-gcc-release-test:
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    environment:
      CC: gcc
      CXX: g++
      TARGET: all
      BUILD_TYPE: RelWithDebInfo
      CMAKE_GENERATOR: Ninja
      CMAKE_ARGS: -DENABLE_DEVELOPER_MODE:BOOL=ON -DENABLE_TESTING:BOOL=ON
  # clang Debug
  example-clang-debug-build:
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    environment:
      CC: clang
      CXX: clang++
      TARGET: all
      BUILD_TYPE: Debug
      CMAKE_GENERATOR: Ninja
      CMAKE_ARGS: -DENABLE_DEVELOPER_MODE:BOOL=OFF -DENABLE_TESTING:BOOL=OFF
  example-clang-debug-test:
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    environment:
      CC: clang
      CXX: clang++
      TARGET: all
      BUILD_TYPE: Debug
      CMAKE_GENERATOR: Ninja
      CMAKE_ARGS: -DENABLE_DEVELOPER_MODE:BOOL=ON -DENABLE_TESTING:BOOL=ON
  # clang Release
  example-clang-release-build:
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    environment:
      CC: clang
      CXX: clang++
      TARGET: all
      BUILD_TYPE: Release
      CMAKE_GENERATOR: Ninja
      CMAKE_ARGS: -DENABLE_DEVELOPER_MODE:BOOL=OFF -DENABLE_TESTING:BOOL=OFF
  example-clang-release-test:
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    environment:
      CC: clang
      CXX: clang++
      TARGET: all
      BUILD_TYPE: RelWithDebInfo
      CMAKE_GENERATOR: Ninja
      CMAKE_ARGS: -DENABLE_DEVELOPER_MODE:BOOL=ON -DENABLE_TESTING:BOOL=ON
  # example with test coverage
  example-gcc-debug-test-cov:
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    environment:
      CC: gcc
      CXX: g++
      TARGET: all
      BUILD_TYPE: Debug
      CMAKE_GENERATOR: Ninja
      CMAKE_ARGS: -DENABLE_DEVELOPER_MODE:BOOL=ON -DENABLE_TESTING:BOOL=ON -DOPT_ENABLE_COVERAGE:BOOL=ON
  # example with test coverage (run lcov)
  example-gcc-debug-test-lcov:
    build:
      context: .
      dockerfile: Dockerfile
      target: test-coverage
    environment:
      CC: gcc
      CXX: g++
      TARGET: all
      BUILD_TYPE: Debug
      CMAKE_GENERATOR: Ninja
      CMAKE_ARGS: -DENABLE_DEVELOPER_MODE:BOOL=ON -DENABLE_TESTING:BOOL=ON -DOPT_ENABLE_COVERAGE:BOOL=ON
  # example with dependency raylib (vcpkg)
  example-gcc-release-with-raylib:
    build:
      context: .
      dockerfile: Dockerfile.raylib
      target: build
    environment:
      CC: gcc
      CXX: g++
      TARGET: all
      BUILD_TYPE: Release
      CMAKE_GENERATOR: Ninja
      CMAKE_ARGS: -DENABLE_DEVELOPER_MODE:BOOL=OFF -DENABLE_TESTING:BOOL=OFF