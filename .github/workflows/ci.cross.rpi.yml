name: ci-cross-rpi
run-name: crosstool-ng Builds (RaspberryPi ARM Compilers)

on:
  push:
    branches:
      - "main"
      - "feature/ci"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "main"

jobs:
  docker:
    strategy:
      matrix:
        include:
          - build_task: build:base
            test_task: test:base
          - build_task: build:arm:cross:rpi
            test_task: test:arm:cross:rpi
            push_tags: 
              - "abeimler/simple-cppbuilder:rpi4"
              - "abeimler/simple-cppbuilder:rpi3"
              - "abeimler/simple-cppbuilder:rpi2"
              - "abeimler/simple-cppbuilder:rpi1"
              - "abeimler/simple-cppbuilder:rpi4-aarch64"
              - "abeimler/simple-cppbuilder:rpi3-aarch64"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup go-task/task
        run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin
      - name: Setup Container Structure Tests
        run: curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64 && chmod +x container-structure-test-linux-amd64 && mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker Image  
        run: task ${{ matrix.build_task }}
      #- name: Test
      #  if: ${{ matrix.test_task != '[]' && matrix.test_task != '' }}
      # FIXME: Error: error parsing config file: error unmarshalling config: yaml: unmarshal errors: field unboundEnv not found in type v2.MetadataTest
      #  run: task ${{ matrix.test_task }}
      - name: Login to Docker Hub
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Publish Docker Images
        if: ${{ matrix.test_task != '[]' && matrix.test_task != '' && startsWith(github.ref, 'refs/tags/v') }}
        run: for tag in "${{ join(matrix.push_tags, ' ') }}"; do docker push $tag; done
