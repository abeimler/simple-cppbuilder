## base image
FROM abeimler/simple-cppbuilder:base as base

ARG extra_libraries
ARG triplet arm-android

# Install packages available from standard repos
RUN pacman-db-upgrade && \
    pacman -Syyu --noconfirm && pacman-db-upgrade && \
    pacman -S --noconfirm --needed \
        wget curl pkg-config zip unzip tar git go && \
    pacman -S --noconfirm  \
        binutils bison \
        ${extra_libraries} \
        python3 python-pip doxygen graphviz cmake make ninja ccache cppcheck valgrind gcovr \
        neovim emacs nano

# install android-ndk
RUN runuser -l yay -c \
    "yay -Syu --noconfirm && yay -S --noconfirm \
        android-sdk android-ndk" && \
    rm -rf /home/yay/.cache/* && \
    ln -s /opt/android-ndk /opt/android-sdk/ndk-bundle

# setup project env
WORKDIR /home/project
ENV TARGET "all"
ENV BUILD_TYPE "Release"
ENV CMAKE_GENERATOR "Ninja"
ENV CMAKE_ARGS ""
ENV VCPKG_DISABLE_METRICS 1
COPY ./docker-build.sh ./docker-build.sh
COPY ./docker-test.sh ./docker-test.sh

## https://github.com/microsoft/vcpkg/blob/master/docs/users/android.md
ENV VCPKG_DEFAULT_TRIPLET $triplet
RUN git clone https://github.com/Microsoft/vcpkg.git
RUN echo -e "set(VCPKG_TARGET_ARCHITECTURE arm) \nset(VCPKG_CRT_LINKAGE dynamic) \nset(VCPKG_LIBRARY_LINKAGE dynamic) \nset(VCPKG_CMAKE_SYSTEM_NAME Android)" > ./vcpkg/triplets/community/arm-android.cmake
RUN echo -e "set(VCPKG_TARGET_ARCHITECTURE arm64) \nset(VCPKG_CRT_LINKAGE dynamic) \nset(VCPKG_LIBRARY_LINKAGE dynamic) \nset(VCPKG_CMAKE_SYSTEM_NAME Android)" > ./vcpkg/triplets/community/arm64-android.cmake
RUN echo -e "set(VCPKG_TARGET_ARCHITECTURE x86) \nset(VCPKG_CRT_LINKAGE dynamic) \nset(VCPKG_LIBRARY_LINKAGE dynamic) \nset(VCPKG_CMAKE_SYSTEM_NAME Android)" > ./vcpkg/triplets/community/x86-android.cmake"
RUN echo -e "set(VCPKG_TARGET_ARCHITECTURE x64) \nset(VCPKG_CRT_LINKAGE dynamic) \nset(VCPKG_LIBRARY_LINKAGE dynamic) \nset(VCPKG_CMAKE_SYSTEM_NAME Android)" > ./vcpkg/triplets/community/x64-android.cmake
RUN ./vcpkg/bootstrap-vcpkg.sh -disableMetrics
# @TODO: setup compilers and toolchain ?

ENTRYPOINT ["/usr/bin/bash"]
CMD ["./docker-build.sh"]